{"version":3,"sources":["./src/app/admin-login/admin-login.page.html","./src/app/admin-login/admin-login-routing.module.ts","./src/app/admin-login/admin-login.module.ts","./src/app/admin-login/admin-login.page.scss","./src/app/admin-login/admin-login.page.ts"],"names":[],"mappings":"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","file":"admin-login-admin-login-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button></ion-back-button>\\n    </ion-buttons>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size=\\\"auto\\\">\\n          <img alt=\\\"logo\\\" height=\\\"100\\\" src=\\\"../../assets/img/uofsclogo.jpg\\\">\\n        </ion-col>\\n        <ion-col>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col> \\n                <ion-text>Welcome to the</ion-text>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row>\\n              <ion-col>\\n                <ion-text><h1>Koger Center</h1></ion-text>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content [fullscreen]=\\\"true\\\">\\n  <ion-grid>\\n    <ion-row>\\n      <ion-col>\\n        <ion-title color = \\\"primary\\\">Admin Login</ion-title>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n  <form class=\\\"form\\\" [formGroup]=\\\"validations_form\\\" (ngSubmit)=\\\"loginUser(validations_form.value)\\\">\\n    \\n    <!--Reads in email and outputs errors if not correct format or not filled out-->\\n    <ion-item>\\n      <ion-label position = \\\"floating\\\" color=\\\"primary\\\">Email</ion-label>\\n      <ion-input type=\\\"text\\\" formControlName = \\\"email\\\"></ion-input>\\n    </ion-item>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col class=\\\"ion-align-self-start\\\" size=\\\"auto\\\">\\n          <div class = \\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.email\\\">\\n            <div class=\\\"error-message\\\"\\n              *ngIf = \\\"validations_form.get('email').hasError(validation.type) && (validations_form.get('email').dirty || validations_form.get('email').touched)\\\">\\n              {{ validation.message }}\\n            </div>\\n            </ng-container>\\n         </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <!--Reads in password and outputs errors if not correct format or not filled out-->\\n    <ion-item>\\n      <ion-label position = \\\"floating\\\" color=\\\"primary\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName = \\\"password\\\" class=\\\"form-controll\\\" required></ion-input>\\n    </ion-item>\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col class=\\\"ion-align-self-start\\\" size=\\\"auto\\\">\\n          <div class = \\\"validation-errors\\\">\\n            <ng-container *ngFor=\\\"let validation of validation_messages.password\\\">\\n              <div class=\\\"error-message\\\"\\n             *ngIf = \\\"validations_form.get('password').hasError(validation.type) && (validations_form.get('password').dirty || validations_form.get('password').touched)\\\">\\n              {{ validation.message }}\\n              </div>\\n            </ng-container>\\n          </div>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col class=\\\"ion-align-self-start\\\">\\n          <!-- If form is not valid then log in button is not clickable -->\\n          <ion-button class=\\\"submit-btn\\\" type=\\\"submit\\\" [disabled]=\\\"!validations_form.valid\\\" expand=\\\"block\\\">Log In</ion-button>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n\\n    <label class=\\\"error-message\\\">{{errorMessage}}</label>\\n  </form>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AdminLoginPage } from './admin-login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AdminLoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AdminLoginPageRoutingModule {}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AdminLoginPage } from './admin-login.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\nimport { AdminLoginPageRoutingModule } from './admin-login-routing.module'\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: AdminLoginPage }]),\n    AdminLoginPageRoutingModule,\n  ],\n  declarations: [AdminLoginPage]\n})\nexport class Tab3PageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluLWxvZ2luL2FkbWluLWxvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, FormControl, } from '@angular/forms';\nimport { NavController } from '@ionic/angular';\nimport { AuthenticateService } from '../services/authentication.service';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: 'admin-login.page.html',\n  styleUrls: ['admin-login.page.scss']\n})\nexport class AdminLoginPage  implements OnInit {\n\n  validations_form: FormGroup;\n  errorMessage: string = '';\n\n  constructor(\n    private navCtrl: NavController,\n    private authService: AuthenticateService,\n    private formBuilder: FormBuilder\n  ) {}\n  ngOnInit()\n  {\n    this.validations_form = this.formBuilder.group({\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n      // Pattern must match ___@___.___\n      Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      password: new FormControl('', Validators.compose\n      ([\n        Validators.minLength(5),\n        Validators.required\n      ])),\n    });\n  }\n  // Error Messages\n  validation_messages = {\n    'email': [\n      { type: 'required', message: 'Email is required.'},\n      { type: 'pattern', message: 'Please enter a valid email.'}\n    ],\n    'password' : [\n      {type: 'required', message: 'Password is required.'},\n      { type: 'minLength', message: 'Password must be at least 5 characters'}\n    ]\n  };\n\n  loginUser(value)\n  {\n    this.authService.loginUser(value)\n      .then(res=> {\n        console.log(res);\n        console.log('Succesfully Logged In')\n        this.errorMessage = \"\";\n        console.log(\"UID: \" + this.authService.userData.uid);\n      }, err=> {\n        this.errorMessage = err.message;\n      })\n  }\n}\n"],"sourceRoot":"webpack:///"}